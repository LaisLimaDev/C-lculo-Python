# -*- coding: utf-8 -*-
"""Cópia de CIP-S01-A01.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1xLeXAcJra-bW9sKm3gUujGLceo2M_sQA

# 1. Desenhando uma função

## 1.1. A partir de valores tabelados
"""

import matplotlib.pyplot as plt

x = [-4, -3, -2, -1, 0, 1, 2, 3, 4]
y = [16, 9, 4, 1, 0, 1, 4, 9, 16]
plt.plot(x,y,'-b')
plt.plot(x,y,'or')
plt.xlabel('x')
plt.ylabel('y')
plt.title('$f(x) = x^2$')
plt.grid()
plt.show()

"""## 1.2. A partir de expressões fixas"""

import matplotlib.pyplot as plt
import numpy as np
import numexpr as ne

x = np.linspace(-5,5,10)
y = 2*x-1
plt.plot(x,y,'-b')
plt.plot(x,y,'or')
plt.xlabel('x')
plt.ylabel('y')
plt.title('$f(x) = 2x - 1$')
plt.grid()
plt.show()

"""## 1.3. A partir de expressões variáveis"""

import matplotlib.pyplot as plt
import numpy as np
import numexpr as ne

x = np.linspace(-5,5,10)
#equation = 'x^2 = x**2'
equation = input('Digite uma equação: ')
y = ne.evaluate(equation)
plt.plot(x,y,'-b')
plt.plot(x,y,'or')
plt.xlabel('x')
plt.ylabel('y')
title = f'${equation}$'
plt.title(title)
plt.grid()
plt.show()

"""## 1.4. Colocando vários gráficos em uma única figura"""

import matplotlib.pyplot as plt
import numpy as np

# Some example data to display
x = np.linspace(-5, 5, 100)
y1 = 2*x**2 - 5*x + 1
y2 = (x+2)**(0.5)
y3 = (x**2+x)**(-1)
y4 = np.sin(x**2)

fig, axs = plt.subplots(2, 2)
axs[0, 0].plot(x, y1)
axs[0, 0].set_title('Axis [0, 0] | $2x^2 -5x + 1$')
axs[0, 1].plot(x, y2, 'tab:orange')
axs[0, 1].set_title('Axis [0, 1] | $\sqrt{x+2}$')
axs[1, 0].plot(x, y3, 'tab:green')
axs[1, 0].set_title('Axis [1, 0] | $(x^2+x)^{-1}$')
axs[1, 1].plot(x, y4, 'tab:red')
axs[1, 1].set_title('Axis [1, 1] | $sin(x^2)$')

for ax in axs.flat:
    ax.set(xlabel='x-label', ylabel='y-label')

# Hide x labels and tick labels for top plots and y ticks for right plots.
for ax in axs.flat:
    ax.label_outer()

plt.show()